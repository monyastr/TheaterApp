@model TheaterApp.Models.AddMovie

@{
    ViewBag.Title = "AddMovie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AddMovie</h2>


@using (Html.BeginForm("AddMovie", "Theaters", FormMethod.Post))
{


    <div class="form-horizontal">
        <h4>Theater</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Theater.TheaterID)
        @Html.HiddenFor(model => model.Theater.Name)

        <div class="form-group">
        @Html.LabelFor(model => model.Theater.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Theater.Name)           
        </div>
    </div>

        <div class="form-group">
            <label for="ListItem" class="control-label col-md-2"> Movies</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Rate.MovieName, (IEnumerable<SelectListItem>)ViewData["ListItem"], new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Rate.MovieName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Rate.MovieRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rate.MovieRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rate.MovieRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
   <a href='@Url.Action("Index","Theaters")'>Back to List</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
